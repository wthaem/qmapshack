

# Create patches to copyfiles.bat for QMS builds with gisinternals package
# Create build_routino_add.bat for compiling routino
# Create some other files

# Run on x64 Native tools command prompt: "cmake -PCopyFilesGis.cfg" or "cmake -DMSVC64=scripts -PCopyFilesGis.cfg"

cmake_policy(SET CMP0011 NEW)

set(PKG QMS)

set(CMAKE_N "\n")
set(BSL \\ )
set(SL / )

message(NOTICE "Using basic user build settings for package ${PKG}.")

# get basic QMS build info
include("QMSUser.cfg" OPTIONAL)

message(NOTICE "Loaded basic QMS user configuration. ${MSVC64}")

if(NOT DEFINED MSVC64)
    set(MSVC64 msvc_64)
endif()
message(NOTICE "Loaded basic QMS user configuration. ${MSVC64}")

set(OUTF   ${QMSDIR}/${QMSSRC}/${MSVC64}/CopyFilesGis_add.bat)
set(OUTFR  ${QMSDIR}/${QMSSRC}/${MSVC64}/build_routino_add.bat)
set(OUTFN  ${QMSDIR}/${QMSSRC}/${MSVC64}/QMS_gisinternals_add.nsi)
set(OUTFRH ${QMSDIR}/${QMSSRC}/${MSVC64}/QMS_Resources.h)

message(NOTICE "Output files created:${CMAKE_N}  ${OUTF}${CMAKE_N}  ${OUTFR}${CMAKE_N}  ${OUTFN}${CMAKE_N}  ${OUTFRH}")

       
# https://cmake.org/cmake/help/latest/command/string.html     
# https://cmake.org/cmake/help/latest/command/file.html

file(REMOVE ${OUTF})
file(APPEND ${OUTF}  ${CMAKE_N} "rem Environment variable replacements created with CopyFilesGis.cfg using QMSUser.cfg" ${CMAKE_N}${CMAKE_N})

file(REMOVE ${OUTFR})
file(APPEND ${OUTFR} ${CMAKE_N} "rem Environment variable replacements created with CopyFilesGis.cfg using QMSUser.cfg" ${CMAKE_N}${CMAKE_N})

file(REMOVE ${OUTFN})
file(APPEND ${OUTFN} ${CMAKE_N} ";Environment variable replacements created with CopyFilesGis.cfg using QMSUser.cfg" ${CMAKE_N}${CMAKE_N})

file(REMOVE ${OUTFRH})
file(APPEND ${OUTFRH} ${CMAKE_N} "//QMS resource file created with CopyFilesGis.cfg using QMSUser.cfg" ${CMAKE_N}${CMAKE_N})


set(REDIST $ENV{VCToolsRedistDir})

# adjust environment to gisinternals package config
set(VARS

"set QMSI_QMS_PATH=${QMSDIR}"
"set QMSI_GIS_PATH=${QMSDIR}/gisinternals/${GISINTERNALS_VER}_${GISDATE}/release-${GISINTERNALS_VER}-x64"

"set QMSI_QT_PATH=\"${QTBASE}/${QT5_VER}/msvc${QT_MSVC64_VER}\""
"set QMSI_VCREDIST_PATH=\"${REDIST}\""
"set QMSI_ROUT_PATH=\"${QMSDIR}\\routino/routino-${ROUTINO_VER}\\install\""

# DLLs from here are necessary for planetsplitter.exe
"set QMSI_MGW6_PATH=\"${MSYS2_DIR}\\ucrt64\\bin\""
"set QMSI_QUAZIP_PATH=\"${QMSDIR}/quazip/quazip-${QUAZIP_VER}/install\""
"set QMSI_BUILD_PATH=\"${QMSDIR}\\${QMSSRC}\\build\""
)

# adjusted copy statements added to end of copyfiles.bat
set(VARSX

" "
"cd Files"
"mkdir data"
"xcopy %QMSI_GIS_PATH%\\bin\\gdal-data data /s /i"
"copy  %QMSI_GIS_PATH%\\bin\\proj_${PROJ_VER}_${PROJ_SUBVER}.dll"
"xcopy %QMSI_GIS_PATH%\\bin\\*.dll /I /EXCLUDE:..\\gisexclude.txt"

##################### not yet copied - might be missing! Needs additional entry in basic config!
# d:\QtProjects\QMS\lzma\xz-5.4.0\install\bin\liblzma.dll

"mkdir gdalplugins"
"xcopy %QMSI_GIS_PATH%\\bin\\gdal\\plugins gdalplugins /s /i /EXCLUDE:..\\gisexclude.txt"

"copy %QMSI_GIS_PATH%\\bin\\curl-ca-bundle.crt"
"copy %QMSI_GIS_PATH%\\bin\\gdal\\apps\\*.exe"
"copy %QMSI_GIS_PATH%\\bin\\proj${PROJ_VER}\\apps\\*.exe"
"copy %QMSI_GIS_PATH%\\bin\\curl.exe"
"copy %QMSI_GIS_PATH%\\bin\\openssl.exe"
"copy %QMSI_GIS_PATH%\\bin\\sqlite3.exe"

"mkdir share\\proj"

#################### needs more files from original folder, possibly from proj-data-1.11.tar.gz, too.
"xcopy %QMSI_GIS_PATH%\\bin\\proj${PROJ_VER}\\share share\\proj /s /i"

)

# routino replacements:
set(VARSR

"set ROUT_SRC_PATH=\"${QMSDIR}\\routino\\routino-${ROUTINO_VER}\""
"set ROUT_PKG_PATH=\"${QMSDIR}\\routino\\routino-${ROUTINO_VER}\\install\""

"set PATH=${MSYS2_DIR}\\ucrt64\\bin\;%PATH%"
)


set(VARSN

"\; Program version"

"!define VERSION \"${QMS_VER}.${QMS_SUBVER}\""
"!define SUBVERSION \"${QMS_VER}.${QMS_SUBVER}.${QMS_SUBSUBVER}\""

"!define EXEFILE \"${EXEFILE}\""

)

# QMS resource definitions

string(SUBSTRING ${QMS_VER} 0 1 QMSV0)
string(SUBSTRING ${QMS_VER} 2 2 QMSV1)

set(VARSRH

"1 VERSIONINFO" 
"FILEVERSION ${QMSV0},${QMSV1},${QMS_SUBVER},${QMS_SUBSUBVER}" 
"PRODUCTVERSION ${QMSV0},${QMSV1},${QMS_SUBVER},0" 
"FILEOS 0x4" 
"FILETYPE 0x1" 
"{" 
"BLOCK \"StringFileInfo\"" 
"{"
"	BLOCK \"040904E4\""
"	{"
"		VALUE \"CompanyName\", \"\""
"		VALUE \"FileDescription\", QMS_UP+\" compiled with GISInternals\""
"		VALUE \"FileVersion\", \"${QMS_VER}.${QMS_SUBVER}.${QMS_SUBSUBVER}\""
"		VALUE \"InternalName\", QMS"
"		VALUE \"LegalCopyright\", \"Copyright (c) 2023, Oliver Eichler <oliver.eichler@gmx.de>\""
"		VALUE \"OriginalFilename\", QMS +\".exe\""
"		VALUE \"ProductName\", \"QMapShack\""
"		VALUE \"ProductVersion\", \"${QMS_VER}.${QMS_SUBVER}.${QMS_SUBSUBVER}\""
"	}"
"}"

"BLOCK \"VarFileInfo\""
"{"
"	VALUE \"Translation\", 0x0409 0x04E4"
"}"
"}"

)


foreach(X ${VARS})
    string(REPLACE ${SL} ${BSL} H ${X})
    file(APPEND ${OUTF} "${H}" ${CMAKE_N})
endforeach()

foreach(X ${VARSX})
    file(APPEND ${OUTF} "${X}" ${CMAKE_N})
endforeach()   

foreach(X ${VARSR})
    file(APPEND ${OUTFR} "${X}" ${CMAKE_N})
endforeach()  

foreach(X ${VARSN})
    file(APPEND ${OUTFN} "${X}" ${CMAKE_N})
endforeach()  

foreach(X ${VARSRH})
    file(APPEND ${OUTFRH} "${X}" ${CMAKE_N})
endforeach()  

message(NOTICE "End of run.")